import streamlit as st
import random
import unicodedata

def remover_acentos(texto):
    return ''.join(
        c for c in unicodedata.normalize('NFD', texto)
        if unicodedata.category(c) != 'Mn'
    )

# Dicion√°rio de palavras e suas dicas
palavras_dicas = {
    "ora√ß√£o": "Ato de se comunicar com o divino.",
    "p√∫blico": "Conjunto de pessoas em um evento.",
    "solu√ß√£o": "Resposta para um problema.",
    "cora√ß√£o": "√ìrg√£o vital.",
    "informa√ß√£o": "Aquilo que comunica conhecimento.",
    "dif√≠cil": "Oposto de f√°cil.",
    "r√°pido": "Muito veloz.",
    "caminh√£o": "Ve√≠culo de carga.",
    "p√£o": "Alimento feito de farinha.",
    "televis√£o": "Aparelho de entretenimento.",
    "sa√∫de": "Estado de completo bem-estar.",
    "caf√©": "Bebida energ√©tica popular.",
    "emo√ß√£o": "Sentimento intenso.",
    "her√≥i": "Pessoa admir√°vel por coragem.",
    "abacaxi": "Fruta tropical com coroa.",
    "a√ß√∫car": "Ingrediente doce.",
    "p√°ssaro": "Animal que voa.",
    "avi√£o": "Meio de transporte a√©reo.",
    "ca√ßador": "Quem busca ca√ßar.",
    "esfor√ßo": "Ato de se empenhar.",
    "le√£o": "Rei da selva.",
    "computa√ß√£o": "√Årea da ci√™ncia de dados.",
    "a√ß√£o": "Iniciativa pr√°tica.",
    "solid√£o": "Estado de estar s√≥.",
    "alegria": "Felicidade intensa.",
    "educa√ß√£o": "Processo de aprendizagem.",
    "pa√≠s": "Na√ß√£o com territ√≥rio.",
    "f√°cil": "Sem dificuldade.",
    "l√≠der": "Pessoa que guia outras.",
    "organiza√ß√£o": "Estrutura sistematizada.",
    "pr√™mio": "Reconhecimento por conquista.",
    "vit√≥ria": "Ato de vencer.",
    "desafio": "Tarefa dif√≠cil.",
    "professor": "Quem ensina.",
    "viol√£o": "Instrumento musical.",
    "√¥nibus": "Transporte coletivo urbano.",
    "parab√©ns": "Express√£o de congratula√ß√£o.",
    "raz√£o": "Capacidade de racioc√≠nio.",
    "vis√£o": "Sentido de enxergar.",
    "miss√£o": "Tarefa a ser cumprida.",
    "col√©gio": "Institui√ß√£o de ensino.",
    "sugest√£o": "Ideia proposta.",
    "explica√ß√£o": "Ato de tornar algo claro.",
    "inspira√ß√£o": "Fonte de motiva√ß√£o.",
    "mat√©ria": "Conte√∫do de estudo.",
    "visita": "Ato de ir a algum lugar.",
    "b√™n√ß√£o": "Ato de aben√ßoar.",
    "vitamina": "Nutriente essencial.",
    "mudan√ßa": "Transforma√ß√£o.",
    "trabalho": "Atividade laboral.",
    "esperan√ßa": "Expectativa positiva.",
    "j√∫ri": "Grupo que decide um veredito.",
    "c√©u": "Onde est√£o as nuvens.",
    "l√¢mpada": "Objeto que ilumina.",
    "f√™nix": "Ave mitol√≥gica que renasce.",
    "√°lbum": "Cole√ß√£o organizada de itens.",
    "√°rvore": "Planta com tronco e galhos.",
    "√¥nix": "Tipo de pedra preciosa.",
    "√≠cone": "S√≠mbolo representativo.",
    "√≠ndio": "Habitante origin√°rio do Brasil.",
    "f√≥rum": "Espa√ßo de debate p√∫blico.",
    "j√∫bilo": "Alegria intensa.",
    "t√™nis": "Cal√ßado ou esporte com raquete.",
    "c√∫mplice": "Pessoa que colabora em segredo.",
    "m√°gico": "Relacionado √† magia.",
    "√≠mpar": "N√∫mero que n√£o √© divis√≠vel por 2."
}

# Etapa 1: Escolher se quer jogar com ou sem dica
if "modo_escolhido" not in st.session_state:
    st.session_state.modo_escolhido = False

if not st.session_state.modo_escolhido:
    st.title("üéØ Jogo da Forca Premium")
    st.subheader("Escolha o modo de jogo:")
    usar_dica = st.radio("Deseja jogar com dica?", ["Sim", "N√£o"], key="modo_dica")
    if st.button("Iniciar Jogo"):
        st.session_state.usar_dica = usar_dica == "Sim"
        st.session_state.palavra, st.session_state.dica = random.choice(list(palavras_dicas.items()))
        st.session_state.tabuleiro = ["_" for _ in st.session_state.palavra]
        st.session_state.letras_tentadas = []
        st.session_state.chances = len(st.session_state.palavra)
        st.session_state.mensagem = ""
        st.session_state.modo_escolhido = True
        st.rerun()  # <-- for√ßa a interface a atualizar imediatamente
    st.stop()

st.title("üéØ Jogo da Forca Premium")
if st.session_state.usar_dica:
    st.write(f"Dica: *{st.session_state.dica}*")

# Mostrar palavra com tratamento de acento
palavra_display = " ".join([
    letra if remover_acentos(letra.lower()) in st.session_state.letras_tentadas else "_"
    for letra in st.session_state.palavra
])
st.write(f"Palavra: {palavra_display}")

# Fun√ß√£o que processa a letra automaticamente
def processar_letra():
    letra = st.session_state.input_letra
    st.session_state.input_letra = ""  # limpa o campo ap√≥s a tentativa

    letra = remover_acentos(letra.lower())

    if not letra.isalpha():
        st.session_state.mensagem = "‚ö†Ô∏è Digite apenas letras."
        return
    if letra in st.session_state.letras_tentadas:
        st.session_state.mensagem = "‚ÑπÔ∏è Voc√™ j√° tentou essa letra."
        return

    st.session_state.letras_tentadas.append(letra)

    if letra in [remover_acentos(l.lower()) for l in st.session_state.palavra]:
        for i, l in enumerate(st.session_state.palavra):
            if remover_acentos(l.lower()) == letra:
                st.session_state.tabuleiro[i] = l
        st.session_state.mensagem = "‚úÖ Letra correta!"
    else:
        st.session_state.chances -= 1
        st.session_state.mensagem = "‚ùå Letra incorreta!"

# Entrada da letra com on_change
st.text_input("Digite uma letra", max_chars=1, key="input_letra", on_change=processar_letra)


# Mostra letras tentadas e mensagem
st.write("Letras tentadas:", ", ".join(st.session_state.letras_tentadas))
st.write(st.session_state.mensagem)

# Verifica vit√≥ria ou derrota
if "_" not in st.session_state.tabuleiro:
    st.success(f"Parab√©ns! Voc√™ acertou: {st.session_state.palavra}")
    if st.button("Jogar novamente"):
        st.session_state.clear()
        st.rerun()
elif st.session_state.chances == 0:
    st.error(f"Voc√™ perdeu! A palavra era: {st.session_state.palavra}")
    if st.button("Tentar de novo"):
        st.session_state.clear()
        st.rerun()
else:
    st.write(f"Tentativas restantes: {st.session_state.chances}")